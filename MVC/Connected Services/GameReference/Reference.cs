//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.GameService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameReference.IGame")]
    public interface IGame {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/Message", ReplyAction="http://tempuri.org/IGame/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/Message", ReplyAction="http://tempuri.org/IGame/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/GetGames", ReplyAction="http://tempuri.org/IGame/GetGamesResponse")]
        ApplicationService.DTOs.GameDTO[] GetGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/GetGames", ReplyAction="http://tempuri.org/IGame/GetGamesResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.GameDTO[]> GetGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/GetGameByID", ReplyAction="http://tempuri.org/IGame/GetGameByIDResponse")]
        ApplicationService.DTOs.GameDTO GetGameByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/GetGameByID", ReplyAction="http://tempuri.org/IGame/GetGameByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.GameDTO> GetGameByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/PostGame", ReplyAction="http://tempuri.org/IGame/PostGameResponse")]
        string PostGame(ApplicationService.DTOs.GameDTO gameDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/PostGame", ReplyAction="http://tempuri.org/IGame/PostGameResponse")]
        System.Threading.Tasks.Task<string> PostGameAsync(ApplicationService.DTOs.GameDTO gameDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/PutGame", ReplyAction="http://tempuri.org/IGame/PutGameResponse")]
        string PutGame(ApplicationService.DTOs.GameDTO gameDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/PutGame", ReplyAction="http://tempuri.org/IGame/PutGameResponse")]
        System.Threading.Tasks.Task<string> PutGameAsync(ApplicationService.DTOs.GameDTO gameDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/DeleteGame", ReplyAction="http://tempuri.org/IGame/DeleteGameResponse")]
        string DeleteGame(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGame/DeleteGame", ReplyAction="http://tempuri.org/IGame/DeleteGameResponse")]
        System.Threading.Tasks.Task<string> DeleteGameAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameChannel : MVC.GameService.IGame, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameClient : System.ServiceModel.ClientBase<MVC.GameService.IGame>, MVC.GameService.IGame {
        
        public GameClient() {
        }
        
        public GameClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
        
        public ApplicationService.DTOs.GameDTO[] GetGames() {
            return base.Channel.GetGames();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.GameDTO[]> GetGamesAsync() {
            return base.Channel.GetGamesAsync();
        }
        
        public ApplicationService.DTOs.GameDTO GetGameByID(int id) {
            return base.Channel.GetGameByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.GameDTO> GetGameByIDAsync(int id) {
            return base.Channel.GetGameByIDAsync(id);
        }
        
        public string PostGame(ApplicationService.DTOs.GameDTO gameDto) {
            return base.Channel.PostGame(gameDto);
        }
        
        public System.Threading.Tasks.Task<string> PostGameAsync(ApplicationService.DTOs.GameDTO gameDto) {
            return base.Channel.PostGameAsync(gameDto);
        }
        
        public string PutGame(ApplicationService.DTOs.GameDTO gameDto) {
            return base.Channel.PutGame(gameDto);
        }
        
        public System.Threading.Tasks.Task<string> PutGameAsync(ApplicationService.DTOs.GameDTO gameDto) {
            return base.Channel.PutGameAsync(gameDto);
        }
        
        public string DeleteGame(int id) {
            return base.Channel.DeleteGame(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGameAsync(int id) {
            return base.Channel.DeleteGameAsync(id);
        }
    }
}
