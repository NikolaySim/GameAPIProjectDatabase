//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.PlayerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlayerReference.IPlayer")]
    public interface IPlayer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/Message", ReplyAction="http://tempuri.org/IPlayer/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/Message", ReplyAction="http://tempuri.org/IPlayer/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        ApplicationService.DTOs.PlayerDTO[] GetPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayers", ReplyAction="http://tempuri.org/IPlayer/GetPlayersResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.PlayerDTO[]> GetPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        ApplicationService.DTOs.PlayerDTO GetPlayerByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/GetPlayerByID", ReplyAction="http://tempuri.org/IPlayer/GetPlayerByIDResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.PlayerDTO> GetPlayerByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/PostPlayer", ReplyAction="http://tempuri.org/IPlayer/PostPlayerResponse")]
        string PostPlayer(ApplicationService.DTOs.PlayerDTO playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/PostPlayer", ReplyAction="http://tempuri.org/IPlayer/PostPlayerResponse")]
        System.Threading.Tasks.Task<string> PostPlayerAsync(ApplicationService.DTOs.PlayerDTO playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/PutPlayer", ReplyAction="http://tempuri.org/IPlayer/PutPlayerResponse")]
        string PutPlayer(ApplicationService.DTOs.PlayerDTO playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/PutPlayer", ReplyAction="http://tempuri.org/IPlayer/PutPlayerResponse")]
        System.Threading.Tasks.Task<string> PutPlayerAsync(ApplicationService.DTOs.PlayerDTO playerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/DeletePlayer", ReplyAction="http://tempuri.org/IPlayer/DeletePlayerResponse")]
        string DeletePlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayer/DeletePlayer", ReplyAction="http://tempuri.org/IPlayer/DeletePlayerResponse")]
        System.Threading.Tasks.Task<string> DeletePlayerAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerChannel : MVC.PlayerService.IPlayer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerClient : System.ServiceModel.ClientBase<MVC.PlayerService.IPlayer>, MVC.PlayerService.IPlayer {
        
        public PlayerClient() {
        }
        
        public PlayerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
        
        public ApplicationService.DTOs.PlayerDTO[] GetPlayers() {
            return base.Channel.GetPlayers();
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.PlayerDTO[]> GetPlayersAsync() {
            return base.Channel.GetPlayersAsync();
        }
        
        public ApplicationService.DTOs.PlayerDTO GetPlayerByID(int id) {
            return base.Channel.GetPlayerByID(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.PlayerDTO> GetPlayerByIDAsync(int id) {
            return base.Channel.GetPlayerByIDAsync(id);
        }
        
        public string PostPlayer(ApplicationService.DTOs.PlayerDTO playerDto) {
            return base.Channel.PostPlayer(playerDto);
        }
        
        public System.Threading.Tasks.Task<string> PostPlayerAsync(ApplicationService.DTOs.PlayerDTO playerDto) {
            return base.Channel.PostPlayerAsync(playerDto);
        }
        
        public string PutPlayer(ApplicationService.DTOs.PlayerDTO playerDto) {
            return base.Channel.PutPlayer(playerDto);
        }
        
        public System.Threading.Tasks.Task<string> PutPlayerAsync(ApplicationService.DTOs.PlayerDTO playerDto) {
            return base.Channel.PutPlayerAsync(playerDto);
        }
        
        public string DeletePlayer(int id) {
            return base.Channel.DeletePlayer(id);
        }
        
        public System.Threading.Tasks.Task<string> DeletePlayerAsync(int id) {
            return base.Channel.DeletePlayerAsync(id);
        }
    }
}
